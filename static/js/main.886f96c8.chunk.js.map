{"version":3,"sources":["images/bookImg.svg","Header.js","Search.js","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Component","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","print-type","filter","handleSearch","bind","assertThisInitialized","e","target","value","setState","printType","q","_this2","console","log","url","concat","encodeURIComponent","fetch","headers","Content-Type","then","res","ok","Error","json","data","onChangeBooks","items","catch","err","error","message","_this3","htmlFor","id","onChange","onChangeQ","type","placeholder","onClick","preventDefault","name","Results","books","map","book","index","_book$volumeInfo","volumeInfo","title","description","authors","saleInfo","averageRating","imageLinks","infoLink","key","href","rel","src","undefined","thumbnail","bookImg","alt","App","booksChanged","qChanged","src_Header","src_Search","src_Results","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.886f96c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookImg.016abe58.svg\";","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        <h1> Google Book Search </h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \"print-type\": \"all\",\r\n      filter: \"ebooks\"\r\n    };\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  changeFilter(e) {\r\n    const filter = e.target.value;\r\n    this.setState({\r\n      filter\r\n    });\r\n  }\r\n\r\n  changePrintType(e) {\r\n    const printType = e.target.value();\r\n    this.setState({\r\n      \"print-type\": printType\r\n    });\r\n  }\r\n\r\n  handleSearch(q) {\r\n    console.log(this.state);\r\n    const key = \"AIzaSyAJ448LHnJ0N6XxzOyIRfhJFveQzwHU_Ms\";\r\n    const baseurl = \"https://www.googleapis.com/books/v1/volumes\";\r\n    const url = `${baseurl}?q=${encodeURIComponent(q)}&key=${key}&print-type=${\r\n      this.state[\"print-type\"]\r\n    }&filter=${this.state.filter}`;\r\n    const options = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    fetch(url, options)\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Something went wrong, please try again later\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        this.props.onChangeBooks(data.items);\r\n        console.log(data.items);\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className=\"Search\">\r\n          <form>\r\n            <div className=\"search_input\">\r\n              <label htmlFor=\"search\">Search: </label>\r\n              <input\r\n                id=\"search\"\r\n                onChange={e => {\r\n                  this.props.onChangeQ(e.target.value);\r\n                }}\r\n                type=\"text\"\r\n                placeholder=\"Book Search\"\r\n              />\r\n              <button\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  this.handleSearch(this.props.q);\r\n                }}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"Search-type\">\r\n          <ul>\r\n            <li>\r\n              <form className=\"print-type\">\r\n                <label htmlFor=\"print\">Print Type: </label>\r\n                <select name=\"print-type\">\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"books\">Books</option>\r\n                  <option value=\"magazines\">Magazines</option>\r\n                </select>\r\n              </form>\r\n            </li>\r\n            <li>\r\n              <form className=\"book-type\">\r\n                <label htmlFor=\"print\">Book Type: </label>\r\n                <select name=\"filter\">\r\n                  <option value=\"ebooks\">All Google eBooks</option>\r\n                  <option value=\"free-ebooks\">\r\n                    Google eBook with full volume text viewability\r\n                  </option>\r\n                  <option value=\"full\">\r\n                    Public can view entire volume text\r\n                  </option>\r\n                  <option value=\"paid-ebooks\">\r\n                    Google eBook with a price.\r\n                  </option>\r\n                  <option value=\"partial\">\r\n                    Public able to see parts of text.\r\n                  </option>\r\n                </select>\r\n              </form>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\n//import Book from \"./Book\";\r\nimport bookImg from \"./images/bookImg.svg\";\r\n//import Aux from \"./Aux\";\r\nimport \"./App.css\";\r\n\r\nclass Results extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.books.map((book, index) => {\r\n          let {\r\n            title,\r\n            description,\r\n            authors,\r\n            saleInfo,\r\n            averageRating,\r\n            imageLinks,\r\n            infoLink\r\n          } = book.volumeInfo;\r\n          return (\r\n            <div>\r\n              <a\r\n                key={index}\r\n                className=\"book\"\r\n                href={infoLink}\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n              >\r\n                <img\r\n                  src={\r\n                    undefined !== imageLinks\r\n                      ? imageLinks.thumbnail\r\n                      : { bookImg }\r\n                  }\r\n                  alt={`Pictured: The cover for\r\n                the book ${title} ${authors} ${description} ${saleInfo} ${averageRating} .`}\r\n                  className=\"bookCover\"\r\n                />\r\n                <header className=\"bookTitle\">{title}</header>\r\n              </a>\r\n              <div className=\"bookInfo\">\r\n                <p className=\"bookPrice\">{saleInfo}</p>\r\n                <p className=\"bookAuthors\">{authors}</p>\r\n                <p className=\"bookAverageRating\">Rating: {averageRating}</p>\r\n                <p className=\"bookDescription\">{description}</p>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport Results from \"./Results\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      q: \"\",\n      books: []\n    };\n    this.booksChanged = this.booksChanged.bind(this);\n    this.qChanged = this.qChanged.bind(this);\n  }\n\n  booksChanged(books) {\n    this.setState({\n      books\n    });\n  }\n\n  qChanged(q) {\n    this.setState({\n      q\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Search\n          onChangeQ={this.qChanged}\n          onChangeBooks={this.booksChanged}\n          q={this.state.q}\n        />\n        <div className=\"main-content\">\n          <Results books={this.state.books} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}